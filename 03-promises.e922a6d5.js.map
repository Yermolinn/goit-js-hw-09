{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,uBACnCC,EAASF,SAASC,cAAc,SAClCE,EAAO,GAEXD,EAAOE,iBAAiB,SAAS,SAACC,GAChCA,EAAMC,iBACN,IAAMC,EAAWF,EAAMG,cACvBL,EAAO,CACOM,MAAMC,OAAOH,EAASE,MAAME,OAC5BC,KAAKF,OAAOH,EAASK,KAAKD,OAC1BE,OAAOH,OAAOH,EAASM,OAAOF,O,IAI9C,IAAMG,EAAgB,SAAUC,EAAUN,GACtC,IAAMO,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPN,EAAgBI,EAAQ,CAACL,WAAUN,UACjCY,EAAS,CAACN,WAAUN,S,GACzBA,E,KAIPV,EAAUK,iBAAiB,SAAS,SAACC,GACnCA,EAAMC,iBAEN,IADA,IAAIiB,EAAQ,EACHC,EAAS,EAAGA,GAAYrB,EAAKU,OAAQW,IAC9CD,EAAQpB,EAAKM,MAAQN,EAAKS,MAAMY,EAAS,GACzCV,EAAeU,EAAUD,GAAOE,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUN,EAAKiB,EAALjB,MAChDZ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUN,EAAKiB,EAALjB,MAClBZ,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitBtn = document.querySelector(\"button[type=submit]\");\nconst formEl = document.querySelector(\".form\");\nlet refs = {};\n\nformEl.addEventListener('input', (event)=>{\n  event.preventDefault();\n  const elements = event.currentTarget;\n  refs = {\n                delay:Number(elements.delay.value),\n                step:Number(elements.step.value),\n                amount:Number(elements.amount.value)\n  };\n})\n\nconst createPromise = function (position, delay)  {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, rejected) => {\n      setTimeout(() => {\n      if (shouldResolve) {resolve({position, delay})}\n      else {rejected({position, delay})}\n    }, delay);\n  });\n};\n\nsubmitBtn.addEventListener('click', (event) => {\n  event.preventDefault();\n  let delay = 0;\n  for (let position=1; position <= refs.amount; position++) {\n  delay = refs.delay + refs.step*(position-1);\n  createPromise (position, delay).then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n};\n})"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$submitBtn","document","querySelector","$ce04d3a99e08e73b$var$formEl","$ce04d3a99e08e73b$var$refs","addEventListener","event","preventDefault","elements","currentTarget","delay","Number","value","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","rejected","setTimeout","delay1","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e922a6d5.js.map"}